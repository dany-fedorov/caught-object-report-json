{
  "$id": "https://raw.githubusercontent.com/dany-fedorov/caught-object-report-json/main/schema-versions/corj/v0.5.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Caught Object Report JSON",
  "description": "A JS caught object representation. Default implementation is https://www.npmjs.com/package/caught-object-report-json.",
  "type": "object",
  "required": [
    "instanceof_error",
    "typeof",
    "as_string",
    "as_json"
  ],
  "properties": {
    "instanceof_error": {
      "description": "Result of `caught instanceof Error`",
      "type": "boolean"
    },
    "typeof": {
      "description": "Result of `typeof caught`",
      "enum": [
        "undefined",
        "object",
        "boolean",
        "number",
        "bigint",
        "string",
        "symbol",
        "function"
      ]
    },
    "constructor_name": {
      "description": "Result of `caught.constructor.name`. Not set if `caught` does not have a `constructor.name`. Set to `null` if accessing `caught.constructor.name` throws.",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        }
      ]
    },
    "message": {
      "description": "Result of `caught.message`. Not set if `caught` does not have a `message`. Set to `null` if accessing `caught.message` throws.",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        }
      ]
    },
    "as_string": {
      "description": "String representation of `caught` created using the format in field `_m[1]` described in this schema. Set to `null` if creating string representation throws.",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        }
      ]
    },
    "as_json": {
      "description": "JSON representation of `caught` created using the format in field `_m[2]` described in this schema. Set to `null` if creating JSON representation throws.",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "number"
        },
        {
          "type": "string"
        },
        {
          "type": "boolean"
        },
        {
          "type": "array"
        },
        {
          "type": "object"
        }
      ]
    },
    "stack": {
      "description": "Result of `caught.stack`. Not set if `caught` does not have a `stack`. Set to `null` if accessing `caught.stack` throws.",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        }
      ]
    },
    "children": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "number"
          },
          {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/dany-fedorov/caught-object-report-json/main/schema-versions/corj/v0.6.json"
              },
              {
                "type": "object",
                "required": [
                  "child_id",
                  "child_path",
                  "child_level"
                ],
                "properties": {
                  "nested_id": {
                    "type": "number"
                  },
                  "nested_path": {
                    "type": "string"
                  },
                  "nested_level": {
                    "type": "number"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "children_omitted_reason": {
      "description": "Is set if this `caught` object has a `caught.errors` or `caught.cause` fields, but they were omitted by implementation.",
      "type": "string"
    },
    "children_sources": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "v": {
      "description": "Metadata field. A version of report, can be omitted.",
      "enum": [
        "corj/v0.5"
      ]
    },
    "as_string_format": {
      "description": "Metadata field. A format of `as_string` field, can be omitted.",
      "enum": [
        "String"
      ]
    },
    "as_json_format": {
      "description": "Metadata field. A format of `as_json` field, can be omitted.",
      "enum": [
        "safe-stable-stringify@2.4.1"
      ]
    }
  }
}
